import argparse # инпортируем модуль argparse

arab_rom = ((1000, 'M'), (900, 'CM'), (500, 'D'),
           (400, 'CD'), (100, 'C'), (90, 'XC'), 
           (50, 'L'), (40, 'XL'), (10, 'X'), 
           (9, 'IX'), (5, 'V'), (4, 'IV'), (1, 'I'))
# создаём список чтобы им могли пользоваться все функции нашей программы

def arab_rome(number): # функция которая принимает зачения int (i) и возвращает его римское значение 
    if number <= 0:  # если арабское число будеи равно или меньше 0,
        #  возвращаем ОШИБКУ - ERROR!!!, так как среди римских нет отрицательных чисел и числа 0
        return "!!!ERROR!!!"
    res = "" # переменная для результата в которую помещается римское значения числа (char)
    for a, r in arab_rom: # а - переменная в которую будут поочерёдно захотить int-значения из arab_rome, r - char ...
        while number >= a: # пока наше число будет больше int-значения из списка, будет выполнятся цикл  
            res += r # результат равен сложению значений римских чисел(char)
            number -= a # число проходит по значениям (а) и отнимает его
    return res # возвращаем результат функции - римское число

def rome_arab(rom):# функция которая принимает значение римского числа (char) и возвращает арабское число (int)
    #txt = txt.upper()# для того чтобы римские цифры выводились с заглавной буквы
    res = 0 # обнуляем int переменную для передачи в неё арабского числа
    for a, r in arab_rom: # а - переменная в которую будут поочерёдно захотить int-значения из arab_rome, r - char ...
        while rom.startswith (r): 
            # Цикл будет работать до тех пор пока доп.параметр rom будет находить совпадения римских чисел (r) проходя по arab_rome
            res += a # в переменную попадает результат сложения арабских чисел
            rom = rom[ len( r ): ] # срез по длине строки
    return res # возвращаем результат функции - арабское число


if __name__ == '__main__':
    # https://docs.python.org/3/howto/argparse.html
    parser = argparse.ArgumentParser() # добавляем аргумент parser
    parser.add_argument('--arab', help='Арабское число', type=int) # передаём в parser значение int для конвертирования

    parser.add_argument('--rome', help='Римское число', type=str) # передаём в parser значение char для конвертирования

    params = parser.parse_args() # запуск обработки аргументов
    if params.rome: # если переданные пераметры int, то аргумент идёт в функцию rome_arab
        print('Арабское число - ' + str(rome_arab(params.rome))) # передаём в функцию и ввыводим результат

    if params.arab: #  если переданные пераметры char, то аргумент идёт в функцию arab_rome
        print('Римское число - ' + arab_rome(params.arab)) # передаём в функцию и ввыводим результат
